# go_max_procs: 2
log:
  log_dir: logs
inputs:
  - Packet:
      capture:
        enabled: true
        device_type: white
        device: ["en0"]
        snapshot_len: 1024
        promiscuous: false
        output: "file"  # 把该项设置为空则不会输出pcap文件，设置为file则会输出pcap文件
        output_file:
          new_file_interval: 1m
          pcap_dir: pcap_dir
      handler:
        channel_size: 100
        # id_file: id.bin
        # flush_interval: 5s
      upload:
        enabled: true
        source: live_packet
        pcap_dir: pcap_dir
        cursor_type: file
        cursor_config:
          file: cursor.json
          flush_interval: 1s
        save_pcap_file: false
filters:
  - Translate:
      if:
        - '{{if .src_ip}}y{{end}}'
      source: src_ip
      target: src_host
      dictionary_path: config/host.yml
  - Translate:
      if:
        - '{{if .dst_ip}}y{{end}}'
      source: dst_ip
      target: dst_host
      dictionary_path: config/host.yml
  - IPRange:
      source: src_ip
      target: source
      net_path: config/net.yml
  - FlowDirection:
      service_public_ip: ["127.0.0.1"]
      target: flow_direction
outputs:
  # - Elasticsearch:
  #     channel_size: 10
  #     es_addrs: ["http://127.0.0.1:9200"]
  #     es_index: packet
  #     pipeline: packet-geoip # 根据src_ip和dst_ip获得对应GeoIP的pipeline
  - Kafka:
      if:
        - '{{if eq .src_host "localhost"}}y{{end}}'
      channel_size: 10
      addrs: ["127.0.0.1:9092"]
      topic: Done
  # - Clickhouse:
  #     channel_size: 10
  #     addr: 127.0.0.1:9000
  #     database: packet
  #     table: packet
  - SizeRecord:
      channel_size: 10
      addr: localhost:9000
      database: traffic
      username: ''
      password: ''
      table: interval_traffic
      interval: 1m
      timeout: 2m
